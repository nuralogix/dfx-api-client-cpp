/*
 *              Copyright (c) 2016-2019, Nuralogix Corp.
 *                      All Rights reserved
 *
 *      THIS SOFTWARE IS LICENSED BY AND IS THE CONFIDENTIAL AND
 *      PROPRIETARY PROPERTY OF NURALOGIX CORP. IT IS
 *      PROTECTED UNDER THE COPYRIGHT LAWS OF THE USA, CANADA
 *      AND OTHER FOREIGN COUNTRIES. THIS SOFTWARE OR ANY
 *      PART THEREOF, SHALL NOT, WITHOUT THE PRIOR WRITTEN CONSENT
 *      OF NURALOGIX CORP, BE USED, COPIED, DISCLOSED,
 *      DECOMPILED, DISASSEMBLED, MODIFIED OR OTHERWISE TRANSFERRED
 *      EXCEPT IN ACCORDANCE WITH THE TERMS AND CONDITIONS OF A
 *      NURALOGIX CORP SOFTWARE LICENSE AGREEMENT.
 */
 syntax = "proto3";

 import "dfx/chunk/v1/chunk.proto";
 
 option cc_enable_arenas = true;
 option java_package = "ai.nuralogix.dfx.measurementdata.v1";
 option java_outer_classname = "MeasurementData";
 option go_package = "bitbucket.org/nuralogix/dfx-protobuffs-go/dfx/measurementdata/v1;measurementdata";
 option csharp_namespace = "Nuralogix.Dfx.MeasurementData.V1";
 
 package dfx.measurementdata.v1;

 service API {
     rpc Upload(stream UploadRequest) returns (stream UploadResponse) {}
     rpc List(ListRequest) returns (ListResponse) {}
     rpc Remove(RemoveRequest) returns (RemoveResponse) {}
 }

 message UploadRequest {
    message SettingType {
        string measurement_id = 1;
    }
    message DataType {
        dfx.chunk.v1.ChunkType chunk = 1;
    }
    oneof Data {
        SettingType setting = 1;
        DataType datum = 2;
    }
 }

 message UploadResponse {
    int32 last_received_payload = 1;
 }


 message ListRequest {
    uint32 limit = 1;
    uint32 offset = 2;
 }

 message ListResponse {
    message MeasurementPayload {
       string measurement_id = 1;
       int32 last_received_payload = 2;
    }
    repeated MeasurementPayload measurement_payloads = 1;
 }

 message RemoveRequest {
    string measurement_id = 1;
 }

 message RemoveResponse {}