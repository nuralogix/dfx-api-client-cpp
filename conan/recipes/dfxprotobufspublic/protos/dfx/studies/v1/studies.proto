/*
 *              Copyright (c) 2016-2019, Nuralogix Corp.
 *                      All Rights reserved
 *
 *      THIS SOFTWARE IS LICENSED BY AND IS THE CONFIDENTIAL AND
 *      PROPRIETARY PROPERTY OF NURALOGIX CORP. IT IS
 *      PROTECTED UNDER THE COPYRIGHT LAWS OF THE USA, CANADA
 *      AND OTHER FOREIGN COUNTRIES. THIS SOFTWARE OR ANY
 *      PART THEREOF, SHALL NOT, WITHOUT THE PRIOR WRITTEN CONSENT
 *      OF NURALOGIX CORP, BE USED, COPIED, DISCLOSED,
 *      DECOMPILED, DISASSEMBLED, MODIFIED OR OTHERWISE TRANSFERRED
 *      EXCEPT IN ACCORDANCE WITH THE TERMS AND CONDITIONS OF A
 *      NURALOGIX CORP SOFTWARE LICENSE AGREEMENT.
 */
syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option cc_enable_arenas = true;
option java_package = "ai.nuralogix.dfx.studies.v1";
option java_outer_classname = "Studies";
option go_package = "bitbucket.org/nuralogix/dfx-protobuffs-go/dfx/studies/v1;studies";
option csharp_namespace = "Nuralogix.Dfx.Studies.V1";

package dfx.studies.v1;

service API {
  rpc Create (CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/studies"
      body: "*"
    };
  }
  rpc List (ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/api/v1/studies"
    };
  }
  rpc Retrieve (RetrieveRequest) returns (RetrieveResponse) {
    option (google.api.http) = {
      get: "/api/v1/studies/{id}"
    };
  }
  rpc RetrieveMultiple (RetrieveMultipleRequest) returns (RetrieveMultipleResponse) {
    option (google.api.http) = {
      post: "/api/v1/studies/retrieve-multiple"
      body: "*"
    };
  }
  rpc Update (UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/api/v1/studies/{id}"
      body: "*"
    };
  }
  rpc Remove (RemoveRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/studies/{id}"
    };
  }
}

enum Status {
  UNKNOWN_STUDY_STATUS = 0;
  ACTIVE = 1;
  INACTIVE = 2;
  DELETED = 3;
}

// Mode enum defines study mode
enum Mode {
  UNKNOWN_STUDY_MODE = 0;
  STREAM = 1;
  PROCESS = 2;
  DISCRETE = 3;
}

// Create
message CreateRequest {
  string name = 1;
  string description = 2;
  string study_template_id = 3;
  Mode study_mode_id = 4;
}
message CreateResponse {
  string id = 1;
}

// List
message ListRequest {
  uint32 limit = 1;
  uint32 offset = 2;
  Mode study_mode_id = 3;
}
message ListResponse {
  message Study {
    string id = 1;
    string name = 2;
  }  
  uint32 total = 1;
  repeated Study studies = 2;
}

// Retrieve
message RetrieveRequest {
  string id = 1;
}
message RetrieveResponse {
  Study study = 1;
}

// RetrieveMultiple
message RetrieveMultipleRequest {
  repeated string ids = 1;
}
message RetrieveMultipleResponse {
  repeated Study studies = 1;
}

// Update
message UpdateRequest {
  string id = 1;
  string name = 2;
  Status status = 3;
  string description = 4;
  Mode study_mode_id = 5;
}

// Remove
message RemoveRequest {
  string id = 1;
}

// Study object being used in Retrieve and RetrieveMultiple EPs
message Study {
  string id = 1;
  string name = 2;
  Status status = 3;
  string description = 4;
  string study_template_id = 5;
  google.protobuf.Timestamp created = 6;
  google.protobuf.Timestamp updated = 7;
  Mode study_mode_id = 8;
}