/*
 *              Copyright (c) 2016-2019, Nuralogix Corp.
 *                      All Rights reserved
 *
 *      THIS SOFTWARE IS LICENSED BY AND IS THE CONFIDENTIAL AND
 *      PROPRIETARY PROPERTY OF NURALOGIX CORP. IT IS
 *      PROTECTED UNDER THE COPYRIGHT LAWS OF THE USA, CANADA
 *      AND OTHER FOREIGN COUNTRIES. THIS SOFTWARE OR ANY
 *      PART THEREOF, SHALL NOT, WITHOUT THE PRIOR WRITTEN CONSENT
 *      OF NURALOGIX CORP, BE USED, COPIED, DISCLOSED,
 *      DECOMPILED, DISASSEMBLED, MODIFIED OR OTHERWISE TRANSFERRED
 *      EXCEPT IN ACCORDANCE WITH THE TERMS AND CONDITIONS OF A
 *      NURALOGIX CORP SOFTWARE LICENSE AGREEMENT.
 */
syntax = "proto3";

option cc_enable_arenas = true;
option java_package = "ai.nuralogix.dfx";
option java_outer_classname = "Devices";

package dfx.proto.devices;

service Services {
  rpc Types    (TypesRequest)     returns (TypesResponse)   {}
  rpc Create   (CreateRequest)   returns (CreateResponse)   {}
  rpc List     (ListRequest)     returns (ListResponse)     {}
  rpc Retrieve (RetrieveRequest) returns (RetrieveResponse) {}
  rpc Update   (UpdateRequest)   returns (UpdateResponse)   {}
  rpc Remove   (RemoveRequest)   returns (RemoveResponse)   {}
  rpc Checkin  (CheckinRequest)  returns (CheckinResponse)  {}
}

// Types
message TypesRequest {}
message TypesResponse {
  message Type {
    string ID = 1;
    string Name = 2;
    string Description = 3;
    bool IsMobile = 4;
    bool IsTablet = 5;
    bool IsDesktop = 6;
  }
  repeated Type Values = 1;
}

// Create
message CreateRequest {
  string Name = 1;
  string DeviceTypeID = 2;
  string Platform = 3;
  string Identifier = 4;
  string Version = 5;
}
message CreateResponse {
  string ID = 1;
}

// Update
message UpdateRequest {
  message ParamValues {
    string ID = 1;
  }
  ParamValues Params = 1;
  string Name = 2;
  string DeviceTypeID = 3;
  string StatusID = 4;
  string Identifier = 5;
  string Version = 6;
}
message UpdateResponse {}

// List
message ListRequest {
  message QueryValues {
    string ID = 1;
  }
  QueryValues Query = 1;
}
message ListResponse {
  message Device {
    string ID = 1;
    string Name = 2;
    string DeviceTypeID = 3;
    string StatusID = 4;
    string Identifier = 5;
    string Version = 6;
    int32 Measurements = 7;
    uint32 Created = 8;
    uint32 Updated = 9;
  }
  repeated Device Values = 1;
}

// Retrieve
message RetrieveRequest {
  message ParamValues {
    string ID = 1;
  }
  ParamValues Params = 1;
}
message RetrieveResponse {
  string ID = 1;
  string Name = 2;
  string DeviceTypeID = 3;
  string StatusID = 4;
  string Identifier = 5;
  string Version = 6;
  int32 Measurements = 7;
  uint32 Created = 8;
  uint32 Updated = 9;
  string Region = 10;
}

// Remove
message RemoveRequest {
  message ParamValues {
    string ID = 1;
  }
  ParamValues Params = 1;
}
message RemoveResponse {}

// Checkin
message CheckinRequest {
  string Version = 1;
  float Lat = 2;
  float Lng = 3;
  string IPAddress = 4;
  string MACAddress = 5;
  string Operator = 6;
  string FileQueue = 7;
  string MeasurementQueue = 8;
  string Status = 9;
}
message CheckinResponse {
  string StudyChecksum = 1;
  uint32 ActiveMeasurements = 2;
}
