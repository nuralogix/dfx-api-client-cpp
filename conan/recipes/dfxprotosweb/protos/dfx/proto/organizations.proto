/*
 *              Copyright (c) 2016-2019, Nuralogix Corp.
 *                      All Rights reserved
 *
 *      THIS SOFTWARE IS LICENSED BY AND IS THE CONFIDENTIAL AND
 *      PROPRIETARY PROPERTY OF NURALOGIX CORP. IT IS
 *      PROTECTED UNDER THE COPYRIGHT LAWS OF THE USA, CANADA
 *      AND OTHER FOREIGN COUNTRIES. THIS SOFTWARE OR ANY
 *      PART THEREOF, SHALL NOT, WITHOUT THE PRIOR WRITTEN CONSENT
 *      OF NURALOGIX CORP, BE USED, COPIED, DISCLOSED,
 *      DECOMPILED, DISASSEMBLED, MODIFIED OR OTHERWISE TRANSFERRED
 *      EXCEPT IN ACCORDANCE WITH THE TERMS AND CONDITIONS OF A
 *      NURALOGIX CORP SOFTWARE LICENSE AGREEMENT.
 */
syntax = "proto3";

option cc_enable_arenas = true;
option java_package = "ai.nuralogix.dfx";
option java_outer_classname = "Organizations";

package dfx.proto.organizations;

service Services {
  rpc Retrieve          (RetrieveRequest)          returns (RetrieveResponse)          {}
  rpc Users             (UsersRequest)             returns (UsersResponse)             {}
  rpc RegisterLicense   (RegisterLicenseRequest)   returns (RegisterLicenseResponse)   {}
  rpc UnregisterLicense (UnregisterLicenseRequest) returns (UnregisterLicenseResponse) {}
  rpc RetrieveLogo      (RetrieveLogoRequest)      returns (RetrieveLogoResponse)      {}
  rpc GenerateToken     (GenerateTokenRequest)     returns (GenerateTokenResponse)     {}
  rpc LoginWithToken    (LoginWithTokenRequest)    returns (LoginWithTokenResponse)    {}
}

// Status
message RetrieveRequest {}
message OrgAddress {
    string Line1 = 1;
    string Line2 = 2;
    string City = 3;
    string State = 4;
    string Country = 5;
    string PostalCode = 6;
  }
message RetrieveResponse {
  string ID = 1;
  string Name = 2;
  string Identifier = 3;
  string Status = 4;
  uint32 Created = 5;
  uint32 Updated = 6;
  string Email = 7;
  string Contact = 8;
  repeated OrgAddress OrgAddresses = 9;
}

// Users
message User {
  string ID = 1;
  string FirstName = 2;
  string LastName = 3;
  string Email = 4;
  string Gender = 5;
  string DateOfBirth = 6;
}
message UsersRequest {}
message UsersResponse {
  repeated User users = 1;
}

// Register License
message RegisterLicenseRequest {
  string Key = 1;
  string DeviceTypeID = 2;
  string Name = 3;
  string Identifier = 4;
  string Version = 5;
}
message RegisterLicenseResponse {
  string DeviceID = 1;
  string Token = 2;
  string RefreshToken = 3;
}

// Unregister License
message UnregisterLicenseRequest {
  string Key = 1;
  string DeviceID = 2;
}
message UnregisterLicenseResponse {}

// Retrieve a logo
message RetrieveLogoRequest {
  message ParamValues {
    string ID = 1;
  }
  ParamValues Params = 1;
}
message RetrieveLogoResponse {
  bytes Data = 1;
}

// Generate an organization token
message GenerateTokenRequest {
  string UserID = 1;
  string OrganizationID = 2;
  string DeviceID = 3;
  string RoleID = 4;
  string Name = 5;
  uint32 Expires = 6;
}
message GenerateTokenResponse {
  string Token = 1;
}

// Login with token
message LoginWithTokenRequest {
  string Token = 1;
}
message LoginWithTokenResponse {
  string Token = 1;
}
